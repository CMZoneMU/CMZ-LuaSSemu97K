.cpp
bool CCommandManager::GetInfoByName(int Index, COMMAND_LIST* lpInfo) // OK
{
	std::map<int, COMMAND_LIST>::iterator it = this->m_CommandInfo.find(Index);

	if (it != this->m_CommandInfo.end())
	{
		(*lpInfo) = it->second;
		return 1;
	}

	return 0;
}


void CCommandManager::DiscountRequirement(LPOBJ lpObj, int index) // OK
{
	COMMAND_LIST lpInfo;

	if (this->GetInfoByName(index, &lpInfo) == 0)
	{
		return;
	}

	if (lpInfo.Money[lpObj->AccountLevel] > 0)
	{
		lpObj->Money -= lpInfo.Money[lpObj->AccountLevel];

		GCMoneySend(lpObj->Index, lpObj->Money);
	}

	lpObj->CommandCheckTime[lpInfo.Index] = GetTickCount();

	gScriptLoader.OnCommandDone(lpObj->Index, index);
}

.h
bool GetInfoByName(int Index, COMMAND_LIST* lpInfo); // ssemu teste

void DiscountRequirement(LPOBJ lpObj, int index); // ssemu teste



// Adicionar If gScriptLoader.OnCommandManager em CCommandManager::ManagementCore

if (gScriptLoader.OnCommandManager(lpObj->Index, CommandData.Index, argument) != 0)
{
	this->DiscountRequirement(lpObj, CommandData.Index);
	return false;
}
